{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAkBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAStC,OARoB,IAAIC,SAAQ,CAACC,EAASC,KACxCC,YAAW,KACLN,GACFI,EAAQ,C,SAAEN,E,MAAUC,IAEtBM,EAAS,C,SAAEP,E,MAAUC,GAAQ,GAC5BA,EAAM,G,CAzBAQ,SAASC,cAAc,QAE/BC,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,OAClC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAOG,MAAOD,IAAK,CAErCnB,EAAcmB,EAAI,GADPJ,EAAMK,MAAQJ,EAAKI,MAAQD,GAEnCE,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAAwB,OAAOC,QAAQ,uBAAqBtB,QAAiBC,MAAU,IAEhEsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBJ,EAAAwB,OAAOG,QAAQ,sBAAoBxB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const { delay, step, amount } = e.target;\n  for (let i = 0; i < amount.value; i++) {\n    let del = +delay.value + step.value * i;\n    createPromise(i + 1, del)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promiseItem = new Promise((resolve, rejected) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      rejected({ position, delay });\n    }, delay);\n  });\n  return promiseItem;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","rejected","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","target","i","value","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.18e84338.js.map"}